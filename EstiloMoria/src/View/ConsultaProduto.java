/*
 * Tecido.java
 *
 * Created on 1 de Setembro de 2011, 21:03
 */

package View;

import java.awt.AWTKeyStroke;
import java.awt.KeyboardFocusManager;
import java.awt.event.KeyEvent;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.HashSet;
import javax.swing.JFormattedTextField;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;
import javax.swing.text.MaskFormatter;
import Controle.*;
import Modelo.*;
/**
 *
 * @author  Familia-Silva
 */
public class ConsultaProduto extends javax.swing.JFrame {
    private conexao con_produto1;
    private conexao con_produto;
    private int numeroRegistros = 0;
    private int iniciacombo=0;
    
    /** Creates new form Tecido */
    public ConsultaProduto() throws SQLException {
        initComponents();
        
        con_produto= new conexao();
        con_produto.conecta();
        con_produto1= new conexao();
        con_produto1.conecta();
        
        setResizable(false);
        con_produto.executeSQL("select * from produto order by nm_produto");
        
        try {
            
            while(con_produto.resultset.next())
                cmbproduto.addItem(con_produto.resultset.getString("nm_produto"));
        } catch(SQLException erro) {
            JOptionPane.showMessageDialog(null,"Não localizou dados "+erro);
        }
        txtproduto.requestFocus();
        enter();
    Runtime rt = Runtime.getRuntime();
		int MB = 1048576; // total de bytes em 1MB

		double total = rt.maxMemory() / MB;
		double inicio = total - (carregarMemoria()/MB);
		
		//System.out.println(total);
		//System.out.println(inicio);
		
		// Metodo de limpaza
		rt.runFinalization();
		rt.gc();
		
		double fim = total - rt.freeMemory()/ MB;
		System.out.println("Início = " +inicio + "Fim = " + fim);    
    }
    public void enter(){
// Enter simula tecla Tab
        HashSet conj = new HashSet(getFocusTraversalKeys(KeyboardFocusManager.FORWARD_TRAVERSAL_KEYS));
        conj.add(AWTKeyStroke.getAWTKeyStroke(KeyEvent.VK_ENTER, 0));
        setFocusTraversalKeys(KeyboardFocusManager.FORWARD_TRAVERSAL_KEYS, conj);
    }
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        txtcodigo = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        txtproduto = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        btncadastrar = new java.awt.Button();
        btnlimpar = new java.awt.Button();
        btnsair = new java.awt.Button();
        cmbproduto = new javax.swing.JComboBox();

        getContentPane().setLayout(null);

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Consulta Produto");
        getAccessibleContext().setAccessibleName("CadastroTecido");
        txtcodigo.setEnabled(false);
        getContentPane().add(txtcodigo);
        txtcodigo.setBounds(10, 30, 40, 20);

        jLabel1.setText("C\u00f3d.");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(10, 10, 30, 14);

        getContentPane().add(txtproduto);
        txtproduto.setBounds(60, 60, 210, 20);

        jLabel2.setText("Produto");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(60, 10, 60, 14);

        btncadastrar.setFont(new java.awt.Font("Dialog", 1, 12));
        btncadastrar.setLabel("Alterar");
        btncadastrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btncadastrarActionPerformed(evt);
            }
        });

        getContentPane().add(btncadastrar);
        btncadastrar.setBounds(10, 90, 80, 30);

        btnlimpar.setFont(new java.awt.Font("Dialog", 1, 12));
        btnlimpar.setLabel("Limpar");
        btnlimpar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnlimparActionPerformed(evt);
            }
        });

        getContentPane().add(btnlimpar);
        btnlimpar.setBounds(100, 90, 80, 30);

        btnsair.setFont(new java.awt.Font("Dialog", 1, 12));
        btnsair.setLabel("Sair");
        btnsair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnsairActionPerformed(evt);
            }
        });

        getContentPane().add(btnsair);
        btnsair.setBounds(190, 90, 80, 30);

        cmbproduto.setMaximumRowCount(2);
        cmbproduto.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbprodutoItemStateChanged(evt);
            }
        });

        getContentPane().add(cmbproduto);
        cmbproduto.setBounds(60, 30, 210, 20);

        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        setBounds((screenSize.width-295)/2, (screenSize.height-160)/2, 295, 160);
    }// </editor-fold>//GEN-END:initComponents
  public static long carregarMemoria(){
		
		ArrayList<Integer> list = new ArrayList<Integer>();
		for(int i = 0; i<1000000; i++){
		list.add(i);	
		}
		return Runtime.getRuntime().freeMemory();
	}      
    private void cmbprodutoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbprodutoItemStateChanged
// TODO add your handling code here:
        
        if(iniciacombo == 1){
            try {
                con_produto.conecta();
                con_produto.resultset.first();
                String igual = "n";
                while(igual == "n"){
                    if(con_produto.resultset.getString("nm_produto").equals(cmbproduto.getSelectedItem())){
                        igual = "s";
                    } else
                        con_produto.resultset.next();
                }
                txtcodigo.setText(con_produto.resultset.getString(String.valueOf("cd_produto")));
                
            } catch (SQLException ex) {
                ex.printStackTrace();
                
            }
        }
        iniciacombo=1;
        txtproduto.setText(cmbproduto.getSelectedItem().toString());
        txtproduto.requestFocus();
        txtproduto.selectAll();
    }//GEN-LAST:event_cmbprodutoItemStateChanged
    
    private void btnsairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnsairActionPerformed
        dispose();
    }//GEN-LAST:event_btnsairActionPerformed
    
    private void btnlimparActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnlimparActionPerformed
        txtproduto.setText("");
        cmbproduto.setSelectedIndex(0);
        
    }//GEN-LAST:event_btnlimparActionPerformed
    
    private void btncadastrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btncadastrarActionPerformed
// TODO add your handling code here:
        
        try {
            
            if(txtproduto.getText().equals("")||txtproduto.getText().equals("-") ){
                
                JOptionPane.showMessageDialog(null,"Selecione um produto!");
                cmbproduto.requestFocus();
            } else{
                
                String sql1 = "UPDATE Produto Set nm_produto='"+txtproduto.getText().toUpperCase()+"' where cd_produto ='"+(txtcodigo.getText())+"'";
                con_produto.statement.executeUpdate(sql1);
                con_produto.conecta();
                con_produto.executeSQL("Select * from produto order by nm_produto");
                con_produto.resultset.next();
                
                JOptionPane.showMessageDialog(null,"Alteração realizado com sucesso!");
                txtproduto.setText("");
                cmbproduto.setSelectedIndex(0);
                
            }
        } catch (SQLException erro) {
            JOptionPane.showMessageDialog(null,"Erro a tentar Gravar o registro..."+erro);
            
        }
    }//GEN-LAST:event_btncadastrarActionPerformed
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new ConsultaProduto().setVisible(true);
                } catch (SQLException ex) {
                    ex.printStackTrace();
                }
            }
        });
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private java.awt.Button btncadastrar;
    private java.awt.Button btnlimpar;
    private java.awt.Button btnsair;
    private javax.swing.JComboBox cmbproduto;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JTextField txtcodigo;
    private javax.swing.JTextField txtproduto;
    // End of variables declaration//GEN-END:variables
    
}
