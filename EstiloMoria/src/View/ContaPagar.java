/*
 * ContaPagar.java
 *
 * Created on 14 de Setembro de 2011, 07:35
 */

package View;

import Relatorio.*;
import java.awt.AWTKeyStroke;
import java.awt.KeyboardFocusManager;
import java.awt.event.KeyEvent;
import java.sql.SQLException;
import java.text.DecimalFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashSet;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.ButtonGroup;
import javax.swing.JFormattedTextField;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;
import javax.swing.table.DefaultTableModel;
import javax.swing.text.MaskFormatter;
import Controle.*;
import Modelo.*;
import org.lavieri.modelutil.cep.WebServiceCep;
import java.sql.SQLException;
import javax.swing.JFormattedTextField;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;
import javax.swing.text.MaskFormatter;
import Controle.*;
import Modelo.*;
/**
 *
 * @author  Familia-Silva
 */
public class ContaPagar extends javax.swing.JFrame {
    MaskFormatter FormatoData, FormatoCpf, FormatoCnpj, FormatoCep, FormatoTel1, FormatoTel2, FormatoTel3, FormatoTel4;
    private conexao con_fornecedor, con_vendedor, con_terceirizada, con_cliente;
    private int numeroRegistros = 1;
    private int iniciacombo=0;
    private int controle = 0;
    /** Creates new form ContaPagar */
    public ContaPagar() {
        initComponents();
        preenchejTabla1();
        txtfornecedor1.setVisible(false);
        enter();
        controle=0;
         setResizable(false);
         Runtime rt = Runtime.getRuntime();
		int MB = 1048576; // total de bytes em 1MB

		double total = rt.maxMemory() / MB;
		double inicio = total - (carregarMemoria()/MB);
		
		//System.out.println(total);
		//System.out.println(inicio);
		
		// Metodo de limpaza
		rt.runFinalization();
		rt.gc();
		
		double fim = total - rt.freeMemory()/ MB;
		System.out.println("Início = " +inicio + "Fim = " + fim);
    }
    public void enter(){
// Enter simula tecla Tab
        HashSet conj = new HashSet(getFocusTraversalKeys(KeyboardFocusManager.FORWARD_TRAVERSAL_KEYS));
        conj.add(AWTKeyStroke.getAWTKeyStroke(KeyEvent.VK_ENTER, 0));
        setFocusTraversalKeys(KeyboardFocusManager.FORWARD_TRAVERSAL_KEYS, conj);
    }
     public static long carregarMemoria(){
		
		ArrayList<Integer> list = new ArrayList<Integer>();
		for(int i = 0; i<1000000; i++){
		list.add(i);	
		}
		return Runtime.getRuntime().freeMemory();
	}   
    public void preenchejTabla1(){
        final DefaultTableModel modelo = (DefaultTableModel)jTable1.getModel();
        jTable1.getColumnModel().getColumn(0).setPreferredWidth(41);
        jTable1.getColumnModel().getColumn(1).setPreferredWidth(78);
        jTable1.getColumnModel().getColumn(2).setPreferredWidth(260);
        jTable1.getColumnModel().getColumn(3).setPreferredWidth(78);
        jTable1.getColumnModel().getColumn(4).setPreferredWidth(60);
        
        
        // modelo.addRow(new Object []{"a",0,0,0,0,0,0,0,0,0,0,0});
        modelo.setNumRows(0);
    }
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        rdbrazao = new javax.swing.JRadioButton();
        rdbdata = new javax.swing.JRadioButton();
        rdbperiodo = new javax.swing.JRadioButton();
        try
        {
            FormatoData = new MaskFormatter("##/##/####");
        }
        catch (Exception erro)
        {
            JOptionPane.showMessageDialog(null, "Não foi possível gerar máscara, erro = " +erro);
        }

        ftxtinicio = new JFormattedTextField (FormatoData);
        jLabel1 = new javax.swing.JLabel();
        try
        {
            FormatoData = new MaskFormatter("##/##/####");
        }
        catch (Exception erro)
        {
            JOptionPane.showMessageDialog(null, "Não foi possível gerar máscara, erro = " +erro);
        }

        ftxtfinal = new JFormattedTextField (FormatoData);
        jLabel2 = new javax.swing.JLabel();
        lblcontrole = new javax.swing.JLabel();
        txtfornecedor = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        btnsair = new javax.swing.JButton();
        btnlimpar = new javax.swing.JButton();
        btnconsulta = new javax.swing.JButton();
        txtfornecedor1 = new javax.swing.JTextField();
        btnimprimir = new javax.swing.JButton();

        getContentPane().setLayout(null);

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Conta Pagar");
        jPanel1.setLayout(null);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Tipo Consulta"));
        buttonGroup1.add(rdbrazao);
        rdbrazao.setText("Raz\u00e3o");
        rdbrazao.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        rdbrazao.setMargin(new java.awt.Insets(0, 0, 0, 0));
        rdbrazao.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                rdbrazaoItemStateChanged(evt);
            }
        });

        jPanel1.add(rdbrazao);
        rdbrazao.setBounds(10, 40, 60, 15);

        buttonGroup1.add(rdbdata);
        rdbdata.setText("Data");
        rdbdata.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        rdbdata.setMargin(new java.awt.Insets(0, 0, 0, 0));
        rdbdata.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                rdbdataItemStateChanged(evt);
            }
        });

        jPanel1.add(rdbdata);
        rdbdata.setBounds(80, 40, 60, 15);

        buttonGroup1.add(rdbperiodo);
        rdbperiodo.setText("Per\u00edodo");
        rdbperiodo.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        rdbperiodo.setMargin(new java.awt.Insets(0, 0, 0, 0));
        rdbperiodo.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                rdbperiodoItemStateChanged(evt);
            }
        });

        jPanel1.add(rdbperiodo);
        rdbperiodo.setBounds(140, 40, 70, 15);

        ftxtinicio.setEditable(false);
        ftxtinicio.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                ftxtinicioFocusLost(evt);
            }
        });

        jPanel1.add(ftxtinicio);
        ftxtinicio.setBounds(220, 40, 70, 20);

        jLabel1.setText("In\u00edcio");
        jPanel1.add(jLabel1);
        jLabel1.setBounds(220, 20, 50, 14);

        ftxtfinal.setEditable(false);
        ftxtfinal.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                ftxtfinalFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                ftxtfinalFocusLost(evt);
            }
        });

        jPanel1.add(ftxtfinal);
        ftxtfinal.setBounds(300, 40, 70, 20);

        jLabel2.setText("Final");
        jPanel1.add(jLabel2);
        jLabel2.setBounds(300, 20, 50, 14);

        lblcontrole.setText("jLabel4");
        jPanel1.add(lblcontrole);
        lblcontrole.setBounds(320, 40, 34, 14);

        getContentPane().add(jPanel1);
        jPanel1.setBounds(10, 10, 380, 70);

        txtfornecedor.setEditable(false);
        getContentPane().add(txtfornecedor);
        txtfornecedor.setBounds(10, 110, 290, 20);

        jLabel3.setText("Fornecedor");
        getContentPane().add(jLabel3);
        jLabel3.setBounds(10, 90, 80, 14);

        jScrollPane1.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Item", "Data", "Fornecedor", "N. Fiscal", "Valor (R$)"
            }
        ));
        jTable1.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        jScrollPane1.setViewportView(jTable1);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(10, 140, 520, 220);

        btnsair.setFont(new java.awt.Font("Tahoma", 1, 12));
        btnsair.setText("Sair");
        btnsair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnsairActionPerformed(evt);
            }
        });

        getContentPane().add(btnsair);
        btnsair.setBounds(310, 370, 90, 30);

        btnlimpar.setFont(new java.awt.Font("Tahoma", 1, 12));
        btnlimpar.setText("Limpar");
        btnlimpar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnlimparActionPerformed(evt);
            }
        });

        getContentPane().add(btnlimpar);
        btnlimpar.setBounds(210, 370, 90, 30);

        btnconsulta.setFont(new java.awt.Font("Tahoma", 1, 12));
        btnconsulta.setText("Consulta");
        btnconsulta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnconsultaActionPerformed(evt);
            }
        });

        getContentPane().add(btnconsulta);
        btnconsulta.setBounds(10, 370, 90, 30);

        txtfornecedor1.setEditable(false);
        getContentPane().add(txtfornecedor1);
        txtfornecedor1.setBounds(170, 110, 120, 20);

        btnimprimir.setFont(new java.awt.Font("Tahoma", 1, 12));
        btnimprimir.setText("Imprimir");
        btnimprimir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnimprimirActionPerformed(evt);
            }
        });

        getContentPane().add(btnimprimir);
        btnimprimir.setBounds(110, 370, 90, 30);

        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        setBounds((screenSize.width-555)/2, (screenSize.height-450)/2, 555, 450);
    }// </editor-fold>//GEN-END:initComponents
    
    private void btnimprimirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnimprimirActionPerformed
// TODO add your handling code here:
        if(rdbdata.isSelected()){
            new Rel_ContaPagar_Data();
        }
        if(rdbperiodo.isSelected()){
            new Rel_ContaPagar_Periodo();
        }
        if(rdbrazao.isSelected()){
            new Rel_ContaPagar_Nome();
        }
    }//GEN-LAST:event_btnimprimirActionPerformed
    public void preenchejTablaData(){
        
        final DefaultTableModel modelo = (DefaultTableModel)jTable1.getModel();
        jTable1.getColumnModel().getColumn(0).setPreferredWidth(41);
        jTable1.getColumnModel().getColumn(1).setPreferredWidth(78);
        jTable1.getColumnModel().getColumn(2).setPreferredWidth(260);
        jTable1.getColumnModel().getColumn(3).setPreferredWidth(78);
        jTable1.getColumnModel().getColumn(4).setPreferredWidth(60);
        
        SimpleDateFormat fmt = new SimpleDateFormat("dd/MM/yyyy");
        Date data = null;
        
        
        try {
            data = (Date) fmt.parse(ftxtinicio.getText());
            
            
        } catch (ParseException ex) {
            ex.printStackTrace();
        }
        try {
            con_cliente= new conexao();
            con_cliente.conecta();
            con_cliente.executeSQL("SELECT m.dt_dtcontapagar, n.*, m.cd_notafiscal, m.vl_contapagar  FROM Contapagar as m  NATURAL JOIN fornecedor as n where dt_dtcontapagar = '"
                    + data + "'");
            
            while(con_cliente.resultset.next())
                
                //  txtfornecedor1.setText(con_cliente.resultset.getString("nm_razaosocial_fornecedor"));
                modelo.addRow(new Object []{numeroRegistros++,new SimpleDateFormat("dd/MM/yyyy").format(con_cliente.resultset.getDate("dt_dtcontapagar")), con_cliente.resultset.getString("nm_razaosocial_fornecedor"),con_cliente.resultset.getString("cd_notafiscal"),converterDoubleString(con_cliente.resultset.getDouble("vl_contapagar"))});
            
        } catch(SQLException erro) {
            JOptionPane.showMessageDialog(null,"Não localizou dados "+erro);
        }
        try {
            con_cliente= new conexao();
            con_cliente.conecta();
            con_cliente.executeSQL("SELECT m.dt_dtcontapagar, n.*, m.cd_notafiscal, m.vl_contapagar  FROM Contapagar as m  NATURAL JOIN fornecedor as n where dt_dtcontapagar = '"
                    + data + "'");
            
            while(con_cliente.resultset.next())
                
                txtfornecedor1.setText(con_cliente.resultset.getString("nm_razaosocial_fornecedor"));
            // modelo.addRow(new Object []{numeroRegistros++,new SimpleDateFormat("dd/MM/yyyy").format(con_cliente.resultset.getDate("dt_dtcontapagar")), con_cliente.resultset.getString("nm_razaosocial_fornecedor"),con_cliente.resultset.getString("cd_notafiscal"),con_cliente.resultset.getString("vl_contapagar")});
            
        } catch(SQLException erro) {
            JOptionPane.showMessageDialog(null,"Não localizou dados "+erro);
        }
    }
    public void preenchejTablaRazao(){
        
        final DefaultTableModel modelo = (DefaultTableModel)jTable1.getModel();
        jTable1.getColumnModel().getColumn(0).setPreferredWidth(41);
        jTable1.getColumnModel().getColumn(1).setPreferredWidth(78);
        jTable1.getColumnModel().getColumn(2).setPreferredWidth(260);
        jTable1.getColumnModel().getColumn(3).setPreferredWidth(78);
        jTable1.getColumnModel().getColumn(4).setPreferredWidth(60);
        
        SimpleDateFormat fmt = new SimpleDateFormat("dd/MM/yyyy");
        
        try {
            con_cliente= new conexao();
            con_cliente.conecta();
            con_cliente.executeSQL("SELECT m.dt_dtcontapagar, n.*, m.cd_notafiscal, m.vl_contapagar  FROM Contapagar as m  NATURAL JOIN fornecedor as n where nm_razaosocial_fornecedor LIKE  '"
                    + txtfornecedor.getText().toUpperCase() + "%' order by dt_dtcontapagar");
            
            while(con_cliente.resultset.next())
                
                
                modelo.addRow(new Object []{numeroRegistros++,new SimpleDateFormat("dd/MM/yyyy").format(con_cliente.resultset.getDate("dt_dtcontapagar")), con_cliente.resultset.getString("nm_razaosocial_fornecedor"),con_cliente.resultset.getString("cd_notafiscal"),converterDoubleString(con_cliente.resultset.getDouble("vl_contapagar"))});
            
        } catch(SQLException erro) {
            JOptionPane.showMessageDialog(null,"Não localizou dados "+erro);
        }
        try {
            con_cliente= new conexao();
            con_cliente.conecta();
            con_cliente.executeSQL("SELECT m.dt_dtcontapagar, n.*, m.cd_notafiscal, m.vl_contapagar  FROM Contapagar as m  NATURAL JOIN fornecedor as n where nm_razaosocial_fornecedor LIKE  '"
                    + txtfornecedor.getText().toUpperCase() + "%' order by dt_dtcontapagar");
            
            while(con_cliente.resultset.next())
                
                txtfornecedor1.setText(con_cliente.resultset.getString("nm_razaosocial_fornecedor"));
            // modelo.addRow(new Object []{numeroRegistros++,new SimpleDateFormat("dd/MM/yyyy").format(con_cliente.resultset.getDate("dt_dtcontapagar")), con_cliente.resultset.getString("nm_razaosocial_fornecedor"),con_cliente.resultset.getString("cd_notafiscal"),con_cliente.resultset.getString("vl_contapagar")});
            
        } catch(SQLException erro) {
            JOptionPane.showMessageDialog(null,"Não localizou dados "+erro);
        }
        
        
    }
    public void preenchejTablaPeriodo(){
        
        final DefaultTableModel modelo = (DefaultTableModel)jTable1.getModel();
        jTable1.getColumnModel().getColumn(0).setPreferredWidth(41);
        jTable1.getColumnModel().getColumn(1).setPreferredWidth(78);
        jTable1.getColumnModel().getColumn(2).setPreferredWidth(260);
        jTable1.getColumnModel().getColumn(3).setPreferredWidth(78);
        jTable1.getColumnModel().getColumn(4).setPreferredWidth(60);
        
        SimpleDateFormat fmt = new SimpleDateFormat("dd/MM/yyyy");
        Date data = null;
        Date data1 = null;
        
        try {
            data = (Date) fmt.parse(ftxtinicio.getText());
            
            
        } catch (ParseException ex) {
            ex.printStackTrace();
        }
        try {
            data1 = (Date) fmt.parse(ftxtfinal.getText());
            
            
        } catch (ParseException ex) {
            ex.printStackTrace();
        }
        try {
            con_cliente= new conexao();
            con_cliente.conecta();
            con_cliente.executeSQL("SELECT m.dt_dtcontapagar, n.*, m.cd_notafiscal, m.vl_contapagar  FROM Contapagar as m  NATURAL JOIN fornecedor as n where dt_dtcontapagar >= '"
                    + data
                    + "' and dt_dtcontapagar <= '"
                    + data1
                    + "' order by dt_dtcontapagar");
            
            while(con_cliente.resultset.next())
                
                
                modelo.addRow(new Object []{numeroRegistros++,new SimpleDateFormat("dd/MM/yyyy").format(con_cliente.resultset.getDate("dt_dtcontapagar")), con_cliente.resultset.getString("nm_razaosocial_fornecedor"),con_cliente.resultset.getString("cd_notafiscal"),converterDoubleString(con_cliente.resultset.getDouble("vl_contapagar"))});
            
        } catch(SQLException erro) {
            JOptionPane.showMessageDialog(null,"Não localizou dados "+erro);
        }
        try {
            con_cliente= new conexao();
            con_cliente.conecta();
            con_cliente.executeSQL("SELECT m.dt_dtcontapagar, n.*, m.cd_notafiscal, m.vl_contapagar  FROM Contapagar as m  NATURAL JOIN fornecedor as n where dt_dtcontapagar >= '"
                    + data
                    + "' and dt_dtcontapagar <= '"
                    + data1
                    + "' order by dt_dtcontapagar");
            
            while(con_cliente.resultset.next())
                
                txtfornecedor1.setText(con_cliente.resultset.getString("nm_razaosocial_fornecedor"));
            // modelo.addRow(new Object []{numeroRegistros++,new SimpleDateFormat("dd/MM/yyyy").format(con_cliente.resultset.getDate("dt_dtcontapagar")), con_cliente.resultset.getString("nm_razaosocial_fornecedor"),con_cliente.resultset.getString("cd_notafiscal"),con_cliente.resultset.getString("vl_contapagar")});
            
        } catch(SQLException erro) {
            JOptionPane.showMessageDialog(null,"Não localizou dados "+erro);
        }
    }
     public static String converterDoubleString(double precoDouble) {  
   /*Transformando um double em 2 casas decimais*/  
   DecimalFormat fmt = new DecimalFormat("0.00");    //limita o número de casas decimais     
   String string = fmt.format(precoDouble);  
   String[] part = string.split("[,]");  
   String preco = part[0]+"."+part[1];  
   return preco;  
}  
    private void btnconsultaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnconsultaActionPerformed
// TODO add your handling code here:
       controle = 0;
        lblcontrole.setText(String.valueOf(controle));
        if(rdbdata.isSelected()){
            preenchejTablaData();
            if( txtfornecedor1.getText().equals("")){
                JOptionPane.showMessageDialog(null,"Não há pagamento para está data!");
                txtfornecedor1.setText("");
            }
            
        }
        if(rdbperiodo.isSelected()){
            preenchejTablaPeriodo();
            if( txtfornecedor1.getText().equals("")){
                JOptionPane.showMessageDialog(null,"Não há pagamento para este período!");
                txtfornecedor1.setText("");
            }
        }
        if(rdbrazao.isSelected()){
            preenchejTablaRazao();
            if( txtfornecedor1.getText().equals("")){
                JOptionPane.showMessageDialog(null,"Não há pagamento para este fornecedor!");
                
            }
        }
    }//GEN-LAST:event_btnconsultaActionPerformed
    
    private void btnlimparActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnlimparActionPerformed
// TODO add your handling code here:
        
        txtfornecedor1.setText("");
        ((DefaultTableModel) jTable1.getModel()).setNumRows(0);
        jTable1.updateUI();
        buttonGroup1.clearSelection();
        controle = 0;
        lblcontrole.setText(String.valueOf(controle));
        txtfornecedor.setEditable(false);
        txtfornecedor.setText("");
        ftxtfinal.setText("");
        ftxtinicio.setText("");
        ftxtinicio.setFocusLostBehavior(ftxtinicio.COMMIT);
        ftxtfinal.setFocusLostBehavior(ftxtfinal.COMMIT);
        ftxtfinal.setEditable(false);
        ftxtinicio.setEditable(false);
        numeroRegistros=1;
    }//GEN-LAST:event_btnlimparActionPerformed
    
    private void btnsairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnsairActionPerformed
// TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_btnsairActionPerformed
    
    private void ftxtfinalFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_ftxtfinalFocusLost
// TODO add your handling code here:
        if(ftxtfinal.getText().equals("  /  /    ")){
            
        }
        else if(lblcontrole.getText().equals("2")){
            Pattern p = Pattern
                    .compile("^(?:(?:31(\\/|-|\\.)(?:0?[13578]|1[02]))\\1|(?:(?:29|30)(\\/|-|\\.)(?:0?[1,3-9]|1[0-2])\\2))(?:(?:1[6-9]|[2-9]\\d)?\\d{2})$|^(?:29(\\/|-|\\.)0?2\\3(?:(?:(?:1[6-9]|[2-9]\\d)?(?:0[48]|[2468][048]|[13579][26])|(?:(?:16|[2468][048]|[3579][26])00))))$|^(?:0?[1-9]|1\\d|2[0-8])(\\/|-|\\.)(?:(?:0?[1-9])|(?:1[0-2]))\\4(?:(?:1[6-9]|[2-9]\\d)?\\d{2})$");
            Matcher m = p.matcher(ftxtinicio.getText());
            if (!m.find())
                
                JOptionPane.showMessageDialog(null, "Data inválida.");
        }
    }//GEN-LAST:event_ftxtfinalFocusLost
    
    private void ftxtfinalFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_ftxtfinalFocusGained
// TODO add your handling code here:
    }//GEN-LAST:event_ftxtfinalFocusGained
    
    private void ftxtinicioFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_ftxtinicioFocusLost
// TODO add your handling code here:
        if(ftxtinicio.getText().equals("  /  /    ")){
            
        }
        else if(lblcontrole.getText().equals("1")||lblcontrole.getText().equals("2")){
            Pattern p = Pattern
                    .compile("^(?:(?:31(\\/|-|\\.)(?:0?[13578]|1[02]))\\1|(?:(?:29|30)(\\/|-|\\.)(?:0?[1,3-9]|1[0-2])\\2))(?:(?:1[6-9]|[2-9]\\d)?\\d{2})$|^(?:29(\\/|-|\\.)0?2\\3(?:(?:(?:1[6-9]|[2-9]\\d)?(?:0[48]|[2468][048]|[13579][26])|(?:(?:16|[2468][048]|[3579][26])00))))$|^(?:0?[1-9]|1\\d|2[0-8])(\\/|-|\\.)(?:(?:0?[1-9])|(?:1[0-2]))\\4(?:(?:1[6-9]|[2-9]\\d)?\\d{2})$");
            Matcher m = p.matcher(ftxtinicio.getText());
            if (!m.find())
                
                JOptionPane.showMessageDialog(null, "Data inválida.");
        }
        
        // ftxtdata1.setText("");
    }//GEN-LAST:event_ftxtinicioFocusLost
    
    private void rdbperiodoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_rdbperiodoItemStateChanged
// TODO add your handling code here:
        if (rdbperiodo.isSelected()){
            controle = 2;
            lblcontrole.setText(String.valueOf(controle));
        ftxtinicio.setEditable(true);
        ftxtfinal.setEditable(true);
        ftxtinicio.requestFocus();
        txtfornecedor.setEditable(false);
        }else{
            lblcontrole.getText().equals("0");
                    
        }
    }//GEN-LAST:event_rdbperiodoItemStateChanged
    
    private void rdbdataItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_rdbdataItemStateChanged
        
// TODO add your handling code here:
        if (rdbdata.isSelected()){
            
            controle = 1;
            lblcontrole.setText(String.valueOf(controle));
            ftxtinicio.setEditable(true);
            ftxtfinal.setEditable(false);
            ftxtinicio.requestFocus();
            txtfornecedor.setEditable(false);
            txtfornecedor1.setText("");
            
        }else{
            lblcontrole.getText().equals("0");
                    
        }
        
        
    }//GEN-LAST:event_rdbdataItemStateChanged
    
    private void rdbrazaoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_rdbrazaoItemStateChanged
// TODO add your handling code here:
        if(rdbrazao.isSelected());
        controle = 0;
        lblcontrole.setText(String.valueOf(controle));
        txtfornecedor.setEditable(true);
        txtfornecedor.requestFocus();
        ftxtinicio.setEditable(false);
        ftxtfinal.setEditable(false);
        txtfornecedor1.setText("");
    }//GEN-LAST:event_rdbrazaoItemStateChanged
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ContaPagar().setVisible(true);
            }
        });
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnconsulta;
    private javax.swing.JButton btnimprimir;
    private javax.swing.JButton btnlimpar;
    private javax.swing.JButton btnsair;
    private javax.swing.ButtonGroup buttonGroup1;
    public static javax.swing.JFormattedTextField ftxtfinal;
    public static javax.swing.JFormattedTextField ftxtinicio;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel lblcontrole;
    private javax.swing.JRadioButton rdbdata;
    private javax.swing.JRadioButton rdbperiodo;
    private javax.swing.JRadioButton rdbrazao;
    public static javax.swing.JTextField txtfornecedor;
    private javax.swing.JTextField txtfornecedor1;
    // End of variables declaration//GEN-END:variables
    
}
