/*
 * Tecido.java
 *
 * Created on 1 de Setembro de 2011, 21:03
 */
package View;

import java.awt.AWTKeyStroke;
import java.awt.KeyboardFocusManager;
import java.awt.event.KeyEvent;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.HashSet;
import javax.swing.JFormattedTextField;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;
import javax.swing.text.MaskFormatter;
import Controle.*;
import Modelo.*;

/**
 *
 * @author  Familia-Silva
 */
public class ExcluirUsuario extends javax.swing.JFrame {

    private conexao con_produto1;
    private conexao con_produto;
    private int numeroRegistros = 0;
    private int iniciacombo = 0;

    /** Creates new form Tecido */
    public ExcluirUsuario() throws SQLException {
        initComponents();

        con_produto = new conexao();
        con_produto.conecta();
        con_produto1 = new conexao();
        con_produto1.conecta();

        setResizable(false);
        con_produto.executeSQL("select * from Login order by nm_operador");

        try {

            while (con_produto.resultset.next()) {
                cmbusuario.addItem(con_produto.resultset.getString("nm_operador"));
            }
        } catch (SQLException erro) {
            JOptionPane.showMessageDialog(null, "Não localizou dados " + erro);
        }
        txtusuario.requestFocus();
        enter();
        Runtime rt = Runtime.getRuntime();
        int MB = 1048576; // total de bytes em 1MB

        double total = rt.maxMemory() / MB;
        double inicio = total - (carregarMemoria() / MB);

        //System.out.println(total);
        //System.out.println(inicio);

        // Metodo de limpaza
        rt.runFinalization();
        rt.gc();

        double fim = total - rt.freeMemory() / MB;
        System.out.println("Início = " + inicio + "Fim = " + fim);
    }

    public void enter() {
// Enter simula tecla Tab
        HashSet conj = new HashSet(getFocusTraversalKeys(KeyboardFocusManager.FORWARD_TRAVERSAL_KEYS));
        conj.add(AWTKeyStroke.getAWTKeyStroke(KeyEvent.VK_ENTER, 0));
        setFocusTraversalKeys(KeyboardFocusManager.FORWARD_TRAVERSAL_KEYS, conj);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtcodigo = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        txtusuario = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        btndeletar = new java.awt.Button();
        btnlimpar = new java.awt.Button();
        btnsair = new java.awt.Button();
        cmbusuario = new javax.swing.JComboBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Excluir Usuário");
        getContentPane().setLayout(null);

        txtcodigo.setEnabled(false);
        getContentPane().add(txtcodigo);
        txtcodigo.setBounds(10, 30, 40, 20);

        jLabel1.setText("Cód.");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(10, 10, 30, 14);
        getContentPane().add(txtusuario);
        txtusuario.setBounds(60, 60, 210, 20);

        jLabel2.setText("Usuário");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(60, 10, 60, 14);

        btndeletar.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        btndeletar.setLabel("Deletar");
        btndeletar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btndeletarActionPerformed(evt);
            }
        });
        getContentPane().add(btndeletar);
        btndeletar.setBounds(10, 100, 80, 30);

        btnlimpar.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        btnlimpar.setLabel("Limpar");
        btnlimpar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnlimparActionPerformed(evt);
            }
        });
        getContentPane().add(btnlimpar);
        btnlimpar.setBounds(100, 100, 80, 30);

        btnsair.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        btnsair.setLabel("Sair");
        btnsair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnsairActionPerformed(evt);
            }
        });
        getContentPane().add(btnsair);
        btnsair.setBounds(190, 100, 80, 30);

        cmbusuario.setMaximumRowCount(2);
        cmbusuario.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbusuarioItemStateChanged(evt);
            }
        });
        getContentPane().add(cmbusuario);
        cmbusuario.setBounds(60, 30, 210, 20);

        getAccessibleContext().setAccessibleName("CadastroTecido");

        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        setBounds((screenSize.width-295)/2, (screenSize.height-168)/2, 295, 168);
    }// </editor-fold>//GEN-END:initComponents

    public static long carregarMemoria() {

        ArrayList<Integer> list = new ArrayList<Integer>();
        for (int i = 0; i < 1000000; i++) {
            list.add(i);
        }
        return Runtime.getRuntime().freeMemory();
    }
    private void cmbusuarioItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbusuarioItemStateChanged
// TODO add your handling code here:

        if (iniciacombo == 1) {
            try {
                con_produto.conecta();
                con_produto.resultset.first();
                String igual = "n";
                while (igual == "n") {
                    if (con_produto.resultset.getString("nm_operador").equals(cmbusuario.getSelectedItem())) {
                        igual = "s";
                    } else {
                        con_produto.resultset.next();
                    }
                }
                txtcodigo.setText(con_produto.resultset.getString(String.valueOf("cd_usuario")));
                txtusuario.setText(con_produto.resultset.getString(String.valueOf("nm_usuario")));

            } catch (SQLException ex) {
                ex.printStackTrace();

            }
        }
        iniciacombo = 1;
        //txtusuario.setText(cmbusuario.getSelectedItem().toString());
        txtusuario.requestFocus();
        txtusuario.selectAll();
    }//GEN-LAST:event_cmbusuarioItemStateChanged

    private void btnsairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnsairActionPerformed
        dispose();
    }//GEN-LAST:event_btnsairActionPerformed

    private void btnlimparActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnlimparActionPerformed
        txtusuario.setText("");
        cmbusuario.setSelectedIndex(0);

    }//GEN-LAST:event_btnlimparActionPerformed

    private void btndeletarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btndeletarActionPerformed
// TODO add your handling code here:

        try {

            String nome = "Deletar: " + cmbusuario.getSelectedItem() + "?";
            int opcao_escolha = JOptionPane.showConfirmDialog(null, nome, "Exlusão", JOptionPane.YES_NO_OPTION);
            if (opcao_escolha == JOptionPane.YES_OPTION) {
                String sql = "DELETE from login where cd_usuario=" + Integer.parseInt(txtcodigo.getText());

                int conseguiu_excluir = con_produto.statement.executeUpdate(sql);

                if (conseguiu_excluir == 1) {
                    JOptionPane.showMessageDialog(null, "Exclusão realizada com sucesso!!!");
                    con_produto.executeSQL("Select * from login order by nm_operador");
                    con_produto.resultset.first();

                    cmbusuario.setSelectedIndex(0);
                }
    }//GEN-LAST:event_btndeletarActionPerformed

        } catch (SQLException ex) {
            ex.printStackTrace();


        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                try {
                    new ExcluirUsuario().setVisible(true);
                } catch (SQLException ex) {
                    ex.printStackTrace();
                }
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private java.awt.Button btndeletar;
    private java.awt.Button btnlimpar;
    private java.awt.Button btnsair;
    private javax.swing.JComboBox cmbusuario;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JTextField txtcodigo;
    private javax.swing.JTextField txtusuario;
    // End of variables declaration//GEN-END:variables
}
