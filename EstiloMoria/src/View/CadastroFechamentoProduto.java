/*
 * CadastroFechamentoProduto.java
 *
 * Created on 12 de Setembro de 2011, 16:39
 */

package View;
import Relatorio.Rel_Envio_Fech_Prod;
import Relatorio.Rel_Envio_Fech_Prod_1;
import java.awt.AWTKeyStroke;
import java.awt.KeyboardFocusManager;
import java.awt.event.KeyEvent;
import java.sql.SQLException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashSet;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.ButtonGroup;
import javax.swing.JFormattedTextField;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;
import javax.swing.table.DefaultTableModel;
import javax.swing.text.MaskFormatter;
import Controle.*;
import Modelo.*;
import Utilitarios.*;
import org.lavieri.modelutil.cep.WebServiceCep;
import java.sql.SQLException;
import javax.swing.JFormattedTextField;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;
import javax.swing.text.MaskFormatter;
import Controle.*;
import Modelo.*;
/**
 *
 * @author  Familia-Silva
 */
public class CadastroFechamentoProduto extends javax.swing.JFrame {
    private  MaskFormatter FormatoData, FormatoCpf, FormatoCnpj, FormatoCep, FormatoTel1, FormatoTel2, FormatoTel3, FormatoTel4;
    private conexao con_cliente, con_endereco, con_telefone, con_email,con_fechamento, con_mostruario, con_cor, con_produto;
    private int iniciacombo=0;
    private data mostra_data;
    private int numeroRegistros=0;
    /** Creates new form CadastroFechamentoProduto */
    public CadastroFechamentoProduto() {
        initComponents();
        
        Date data = new Date();
        SimpleDateFormat formatador = new SimpleDateFormat("dd/MM/yyyy");
        
         setResizable(false);
        con_mostruario = new conexao();
        con_mostruario.conecta();
        con_mostruario.executeSQL("select MAX (cd_numlote+1) AS Codigo from fechprod");
        lblcodcor.setVisible(false);
        lblcodproduto.setVisible(false);
        con_fechamento = new conexao();
        con_fechamento.conecta();
        con_cor= new conexao();
        con_cor.conecta();
        con_produto= new conexao();
        con_produto.conecta();
        con_cliente=new conexao();
        con_cliente.conecta();
        con_cliente.executeSQL("Select c.cd_terceirizada, c.cd_cpf_terceirizada, c.nm_contato, t.*, en.*, e.nm_email1 FROM Terceirizada c Left Join Telefone t ON (c.cd_terceirizada=t.cd_terceirizada) left join email e on (c.cd_terceirizada=e.cd_terceirizada) left join endereco en on (c.cd_terceirizada=en.cd_terceirizada) order by nm_contato");
        con_fechamento.executeSQL("Select  f.*, t.nm_contato, c.nm_cor,p.nm_produto FROM fechprod as f natural join Terceirizada as t natural join Cor  as c natural join Produto as p order by cd_numlote");
        con_cor.executeSQL("select * from cor order by nm_cor");
        con_produto.executeSQL("select * from produto order by nm_produto");
        
        
        try {
            
            while(con_fechamento.resultset.next())
                cmblote.addItem(con_fechamento.resultset.getString("cd_numlote"));
            
            
        } catch(SQLException erro) {
            JOptionPane.showMessageDialog(null,"Não localizou dados "+erro);
        }
        enter();
        Runtime rt = Runtime.getRuntime();
		int MB = 1048576; // total de bytes em 1MB

		double total = rt.maxMemory() / MB;
		double inicio = total - (carregarMemoria()/MB);
		
		//System.out.println(total);
		//System.out.println(inicio);
		
		// Metodo de limpaza
		rt.runFinalization();
		rt.gc();
		
		double fim = total - rt.freeMemory()/ MB;
		System.out.println("Início = " +inicio + "Fim = " + fim);
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel2 = new javax.swing.JPanel();
        txtcodigo = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtnome = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        try
        {
            FormatoData = new MaskFormatter("##/##/####");
        }
        catch (Exception erro)
        {
            JOptionPane.showMessageDialog(null, "Não foi possível gerar máscara, erro = " +erro);
        }

        txtenvio = new JFormattedTextField (FormatoData);
        try
        {
            FormatoData = new MaskFormatter("##/##/####");
        }
        catch (Exception erro)
        {
            JOptionPane.showMessageDialog(null, "Não foi possível gerar máscara, erro = " +erro);
        }

        txtdevolucao = new JFormattedTextField (FormatoData);
        jPanel4 = new javax.swing.JPanel();
        txtequipamento = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        try
        {
            FormatoData = new MaskFormatter("##/##/####");
        }
        catch (Exception erro)
        {
            JOptionPane.showMessageDialog(null, "Não foi possível gerar máscara, erro = " +erro);
        }

        txtempeq = new JFormattedTextField (FormatoData);
        try
        {
            FormatoData = new MaskFormatter("##/##/####");
        }
        catch (Exception erro)
        {
            JOptionPane.showMessageDialog(null, "Não foi possível gerar máscara, erro = " +erro);
        }

        txtdeveq = new JFormattedTextField (FormatoData);
        jPanel5 = new javax.swing.JPanel();
        lblcodcor = new javax.swing.JLabel();
        lblcodproduto = new javax.swing.JLabel();
        lblcodproduto1 = new javax.swing.JLabel();
        txtp = new javax.swing.JTextField();
        lblcodproduto2 = new javax.swing.JLabel();
        chbp = new javax.swing.JCheckBox();
        txtm = new javax.swing.JTextField();
        lblcodproduto3 = new javax.swing.JLabel();
        chbm = new javax.swing.JCheckBox();
        txtg = new javax.swing.JTextField();
        lblcodproduto4 = new javax.swing.JLabel();
        chbg = new javax.swing.JCheckBox();
        txtgg = new javax.swing.JTextField();
        lblcodproduto5 = new javax.swing.JLabel();
        chbgg = new javax.swing.JCheckBox();
        txteg = new javax.swing.JTextField();
        lblcodproduto6 = new javax.swing.JLabel();
        chbeg = new javax.swing.JCheckBox();
        txtexg = new javax.swing.JTextField();
        lblcodproduto7 = new javax.swing.JLabel();
        chbexg = new javax.swing.JCheckBox();
        lblcodproduto8 = new javax.swing.JLabel();
        lblcodproduto9 = new javax.swing.JLabel();
        txtproduto = new javax.swing.JTextField();
        txtcor = new javax.swing.JTextField();
        cmblote = new javax.swing.JComboBox();
        jPanel6 = new javax.swing.JPanel();
        txtobs = new javax.swing.JTextArea();
        btneditar = new javax.swing.JButton();
        btnlimpar = new javax.swing.JButton();
        btnsair = new javax.swing.JButton();
        btnsalvaed = new javax.swing.JButton();

        getContentPane().setLayout(null);

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Consulta Fechamento Produto");
        jPanel2.setLayout(null);

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Terceirizada"));
        txtcodigo.setEditable(false);
        jPanel2.add(txtcodigo);
        txtcodigo.setBounds(10, 40, 50, 20);

        jLabel1.setText("C\u00f3digo");
        jPanel2.add(jLabel1);
        jLabel1.setBounds(10, 20, 50, 14);

        jLabel2.setText("Nome");
        jPanel2.add(jLabel2);
        jLabel2.setBounds(70, 20, 50, 14);

        txtnome.setEditable(false);
        txtnome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtnomeActionPerformed(evt);
            }
        });

        jPanel2.add(txtnome);
        txtnome.setBounds(70, 40, 340, 20);

        getContentPane().add(jPanel2);
        jPanel2.setBounds(10, 10, 420, 70);

        jPanel3.setLayout(null);

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Datas"));
        jLabel10.setText("Envio");
        jPanel3.add(jLabel10);
        jLabel10.setBounds(10, 20, 60, 14);

        jLabel11.setText("Devolu\u00e7\u00e3o");
        jPanel3.add(jLabel11);
        jLabel11.setBounds(100, 20, 60, 14);

        txtenvio.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtenvioFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtenvioFocusLost(evt);
            }
        });

        jPanel3.add(txtenvio);
        txtenvio.setBounds(10, 40, 80, 20);

        txtdevolucao.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtdevolucaoFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtdevolucaoFocusLost(evt);
            }
        });

        jPanel3.add(txtdevolucao);
        txtdevolucao.setBounds(100, 40, 80, 20);

        getContentPane().add(jPanel3);
        jPanel3.setBounds(440, 10, 190, 70);

        jPanel4.setLayout(null);

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder("Equipamento Empr\u00e9stimo"));
        jPanel4.add(txtequipamento);
        txtequipamento.setBounds(10, 50, 210, 20);

        jLabel3.setText("Tipo Equipamento");
        jPanel4.add(jLabel3);
        jLabel3.setBounds(10, 30, 150, 14);

        jLabel13.setText("Envio");
        jPanel4.add(jLabel13);
        jLabel13.setBounds(10, 80, 60, 14);

        jLabel12.setText("Devolu\u00e7\u00e3o");
        jPanel4.add(jLabel12);
        jLabel12.setBounds(100, 80, 60, 14);

        txtempeq.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtempeqFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtempeqFocusLost(evt);
            }
        });

        jPanel4.add(txtempeq);
        txtempeq.setBounds(10, 100, 80, 20);

        txtdeveq.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtdeveqFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtdeveqFocusLost(evt);
            }
        });

        jPanel4.add(txtdeveq);
        txtdeveq.setBounds(100, 100, 80, 20);

        getContentPane().add(jPanel4);
        jPanel4.setBounds(10, 90, 230, 130);

        jPanel5.setLayout(null);

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder("Dados"));
        lblcodcor.setText("cor");
        jPanel5.add(lblcodcor);
        lblcodcor.setBounds(280, 40, 30, 14);

        lblcodproduto.setText("produto");
        jPanel5.add(lblcodproduto);
        lblcodproduto.setBounds(120, 40, 50, 14);

        lblcodproduto1.setText("Lote");
        jPanel5.add(lblcodproduto1);
        lblcodproduto1.setBounds(10, 80, 50, 14);

        txtp.setText("0");
        txtp.setEnabled(false);
        txtp.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtpFocusGained(evt);
            }
        });
        txtp.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtpKeyTyped(evt);
            }
        });

        jPanel5.add(txtp);
        txtp.setBounds(70, 100, 40, 20);

        lblcodproduto2.setText("P");
        jPanel5.add(lblcodproduto2);
        lblcodproduto2.setBounds(70, 80, 20, 14);

        chbp.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        chbp.setMargin(new java.awt.Insets(0, 0, 0, 0));
        chbp.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                chbpItemStateChanged(evt);
            }
        });

        jPanel5.add(chbp);
        chbp.setBounds(90, 80, 20, 13);

        txtm.setText("0");
        txtm.setEnabled(false);
        txtm.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtmFocusGained(evt);
            }
        });
        txtm.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtmKeyTyped(evt);
            }
        });

        jPanel5.add(txtm);
        txtm.setBounds(120, 100, 40, 20);

        lblcodproduto3.setText("M");
        jPanel5.add(lblcodproduto3);
        lblcodproduto3.setBounds(120, 80, 20, 14);

        chbm.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        chbm.setMargin(new java.awt.Insets(0, 0, 0, 0));
        chbm.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                chbmItemStateChanged(evt);
            }
        });

        jPanel5.add(chbm);
        chbm.setBounds(140, 80, 20, 13);

        txtg.setText("0");
        txtg.setEnabled(false);
        txtg.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtgFocusGained(evt);
            }
        });
        txtg.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtgKeyTyped(evt);
            }
        });

        jPanel5.add(txtg);
        txtg.setBounds(170, 100, 40, 20);

        lblcodproduto4.setText("G");
        jPanel5.add(lblcodproduto4);
        lblcodproduto4.setBounds(170, 80, 20, 14);

        chbg.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        chbg.setMargin(new java.awt.Insets(0, 0, 0, 0));
        chbg.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                chbgItemStateChanged(evt);
            }
        });

        jPanel5.add(chbg);
        chbg.setBounds(190, 80, 20, 13);

        txtgg.setText("0");
        txtgg.setEnabled(false);
        txtgg.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtggFocusGained(evt);
            }
        });
        txtgg.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtggKeyTyped(evt);
            }
        });

        jPanel5.add(txtgg);
        txtgg.setBounds(220, 100, 40, 20);

        lblcodproduto5.setText("GG");
        jPanel5.add(lblcodproduto5);
        lblcodproduto5.setBounds(220, 80, 20, 14);

        chbgg.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        chbgg.setMargin(new java.awt.Insets(0, 0, 0, 0));
        chbgg.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                chbggItemStateChanged(evt);
            }
        });

        jPanel5.add(chbgg);
        chbgg.setBounds(240, 80, 20, 13);

        txteg.setText("0");
        txteg.setEnabled(false);
        txteg.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtegFocusGained(evt);
            }
        });
        txteg.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtegKeyTyped(evt);
            }
        });

        jPanel5.add(txteg);
        txteg.setBounds(270, 100, 40, 20);

        lblcodproduto6.setText("EG");
        jPanel5.add(lblcodproduto6);
        lblcodproduto6.setBounds(270, 80, 20, 14);

        chbeg.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        chbeg.setMargin(new java.awt.Insets(0, 0, 0, 0));
        chbeg.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                chbegItemStateChanged(evt);
            }
        });

        jPanel5.add(chbeg);
        chbeg.setBounds(290, 80, 20, 13);

        txtexg.setText("0");
        txtexg.setEnabled(false);
        txtexg.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtexgFocusGained(evt);
            }
        });
        txtexg.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtexgKeyTyped(evt);
            }
        });

        jPanel5.add(txtexg);
        txtexg.setBounds(320, 100, 40, 20);

        lblcodproduto7.setText("EXG");
        jPanel5.add(lblcodproduto7);
        lblcodproduto7.setBounds(320, 80, 30, 14);

        chbexg.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        chbexg.setMargin(new java.awt.Insets(0, 0, 0, 0));
        chbexg.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                chbexgItemStateChanged(evt);
            }
        });

        jPanel5.add(chbexg);
        chbexg.setBounds(350, 80, 20, 13);

        lblcodproduto8.setText("Produto");
        jPanel5.add(lblcodproduto8);
        lblcodproduto8.setBounds(10, 20, 60, 14);

        lblcodproduto9.setText("Cor");
        jPanel5.add(lblcodproduto9);
        lblcodproduto9.setBounds(230, 20, 60, 14);

        txtproduto.setEditable(false);
        jPanel5.add(txtproduto);
        txtproduto.setBounds(10, 40, 210, 20);

        txtcor.setEditable(false);
        jPanel5.add(txtcor);
        txtcor.setBounds(230, 40, 130, 20);

        cmblote.setMaximumRowCount(5);
        cmblote.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbloteItemStateChanged(evt);
            }
        });
        cmblote.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbloteActionPerformed(evt);
            }
        });

        jPanel5.add(cmblote);
        cmblote.setBounds(10, 100, 50, 20);

        getContentPane().add(jPanel5);
        jPanel5.setBounds(250, 90, 380, 130);

        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder("Observa\u00e7\u00e3o"));
        txtobs.setColumns(20);
        txtobs.setRows(5);

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txtobs, javax.swing.GroupLayout.DEFAULT_SIZE, 348, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addComponent(txtobs, javax.swing.GroupLayout.DEFAULT_SIZE, 82, Short.MAX_VALUE)
                .addContainerGap())
        );
        getContentPane().add(jPanel6);
        jPanel6.setBounds(250, 230, 380, 120);

        btneditar.setFont(new java.awt.Font("Tahoma", 1, 12));
        btneditar.setText("Editar");
        btneditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btneditarActionPerformed(evt);
            }
        });

        getContentPane().add(btneditar);
        btneditar.setBounds(130, 280, 90, 30);

        btnlimpar.setFont(new java.awt.Font("Tahoma", 1, 12));
        btnlimpar.setText("Limpar");
        btnlimpar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnlimparActionPerformed(evt);
            }
        });

        getContentPane().add(btnlimpar);
        btnlimpar.setBounds(10, 320, 90, 30);

        btnsair.setFont(new java.awt.Font("Tahoma", 1, 12));
        btnsair.setText("Sair");
        btnsair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnsairActionPerformed(evt);
            }
        });

        getContentPane().add(btnsair);
        btnsair.setBounds(130, 320, 90, 30);

        btnsalvaed.setFont(new java.awt.Font("Tahoma", 1, 12));
        btnsalvaed.setText("Salvar");
        btnsalvaed.setEnabled(false);
        btnsalvaed.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnsalvaedActionPerformed(evt);
            }
        });

        getContentPane().add(btnsalvaed);
        btnsalvaed.setBounds(10, 280, 90, 30);

        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        setBounds((screenSize.width-655)/2, (screenSize.height-394)/2, 655, 394);
    }// </editor-fold>//GEN-END:initComponents
     public void enter(){
// Enter simula tecla Tab
        HashSet conj = new HashSet(getFocusTraversalKeys(KeyboardFocusManager.FORWARD_TRAVERSAL_KEYS));
        conj.add(AWTKeyStroke.getAWTKeyStroke(KeyEvent.VK_ENTER, 0));
        setFocusTraversalKeys(KeyboardFocusManager.FORWARD_TRAVERSAL_KEYS, conj);
    }
    private void txtnomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtnomeActionPerformed
// TODO add your handling code here:
    }//GEN-LAST:event_txtnomeActionPerformed
     public static long carregarMemoria(){
		
		ArrayList<Integer> list = new ArrayList<Integer>();
		for(int i = 0; i<1000000; i++){
		list.add(i);	
		}
		return Runtime.getRuntime().freeMemory();
	}   
    private void btnsalvaedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnsalvaedActionPerformed
// TODO add your handling code here:
        SimpleDateFormat fmt = new SimpleDateFormat("dd/MM/yyyy");
        Date data = null;
        Date data1 = null;
        Date data2 = null;
        
        try {
            data = (Date) fmt.parse(txtdevolucao.getText());
            
            
        } catch (ParseException ex) {
            ex.printStackTrace();
        }
        try {
            
            data1 = (Date) fmt.parse(txtempeq.getText());
            
        } catch (ParseException ex) {
            ex.printStackTrace();
        }
        try {
            
            data2 = (Date) fmt.parse(txtdeveq.getText());
            
        } catch (ParseException ex) {
            ex.printStackTrace();
        }
        try {
            String sql = "UPDATE FechProd SET qt_p ='" + txtp.getText()
            + "', qt_m='" + txtm.getText() + "',qt_g='" + txtg.getText()
            + "', qt_gg='" + txtgg.getText() + "' , qt_eg='"
                    + txteg.getText() + "', qt_exg='" + txtexg.getText()
                    + "', nm_observacao='" + txtobs.getText().toUpperCase()
                    + "', nm_eqpto='" + txtequipamento.getText().toUpperCase() + "', dt_vevollote='"
                    + data + "', dt_envequpto='"
                    + data1 + "' , dt_devequpto='"
                    + data2 + "' where cd_numlote = '"
                    + cmblote.getSelectedItem().toString() +"'";
                      
            
            con_cliente.statement.executeUpdate(sql);
            JOptionPane.showMessageDialog(null, "Alteração realizada com sucesso!!!");
             
            con_cliente.executeSQL("Select  f.*, t.nm_contato, c.nm_cor,p.nm_produto FROM fechprod as f natural join Terceirizada as t natural join Cor  as c natural join Produto as p");
            con_cliente.resultset.next();
            con_cliente.conecta();
            con_cliente.executeSQL("Select c.cd_terceirizada, c.cd_cpf_terceirizada, c.nm_contato, t.*, en.*, e.nm_email1 FROM Terceirizada c Left Join Telefone t ON (c.cd_terceirizada=t.cd_terceirizada) left join email e on (c.cd_terceirizada=e.cd_terceirizada) left join endereco en on (c.cd_terceirizada=en.cd_terceirizada) order by nm_contato");
            
            
        } catch (SQLException ex) {
            ex.printStackTrace();
        }
        String nome = "Deseja imprimir alterções  do lote: "+Integer.parseInt(cmblote.getSelectedItem().toString())+"?";
            int opcao_escolha = JOptionPane.showConfirmDialog(null,nome,"Imprimir", JOptionPane.YES_NO_OPTION);
            if(opcao_escolha==JOptionPane.YES_OPTION){
                new Rel_Envio_Fech_Prod_1();
            cmblote.setSelectedIndex(0);
            txtobs.setText("");
            txtequipamento.setText("");
            txtp.setText("0");
            txtp.setEnabled(false);
            txtm.setText("0");
            txtm.setEnabled(false);
            txtg.setText("0");
            txtg.setEnabled(false);
            txtgg.setText("0");
            txtgg.setEnabled(false);
            txteg.setText("0");
            txteg.setEnabled(false);
            txtexg.setText("0");
            txtexg.setEnabled(false);
            chbp.setSelected(false);
            chbm.setSelected(false);
            chbg.setSelected(false);
            chbgg.setSelected(false);
            chbeg.setSelected(false);
            chbexg.setSelected(false);
            txtnome.setVisible(true);
            txtnome.setText("");
            txtproduto.setText("");
            txtcodigo.setText("");
            txtcor.setText("");
            txtproduto.setVisible(true);
            txtequipamento.setEnabled(true);
            txtcor.setVisible(true);
            txtp.setBackground(getBackground().white);
            txtm.setBackground(getBackground().white);
            txtg.setBackground(getBackground().white);
            txtgg.setBackground(getBackground().white);
            txteg.setBackground(getBackground().white);
            txtexg.setBackground(getBackground().white);
            txtobs.setBackground(getBackground().white);
            txtequipamento.setBackground(getBackground().white);
            txtempeq.setBackground(getBackground().white);
            txtdeveq.setBackground(getBackground().white);
            txtdevolucao.setBackground(getBackground().white);
            buttonGroup1.clearSelection();
            //isso serve para atualizar o resultset
            }
            else{
             cmblote.setSelectedIndex(0);
            txtobs.setText("");
            txtequipamento.setText("");
            txtp.setText("0");
            txtp.setEnabled(false);
            txtm.setText("0");
            txtm.setEnabled(false);
            txtg.setText("0");
            txtg.setEnabled(false);
            txtgg.setText("0");
            txtgg.setEnabled(false);
            txteg.setText("0");
            txteg.setEnabled(false);
            txtexg.setText("0");
            txtexg.setEnabled(false);
            chbp.setSelected(false);
            chbm.setSelected(false);
            chbg.setSelected(false);
            chbgg.setSelected(false);
            chbeg.setSelected(false);
            chbexg.setSelected(false);
            txtnome.setVisible(true);
            txtnome.setText("");
            txtproduto.setText("");
            txtcodigo.setText("");
            txtcor.setText("");
            txtproduto.setVisible(true);
            txtequipamento.setEnabled(true);
            txtcor.setVisible(true);
            txtp.setBackground(getBackground().white);
            txtm.setBackground(getBackground().white);
            txtg.setBackground(getBackground().white);
            txtgg.setBackground(getBackground().white);
            txteg.setBackground(getBackground().white);
            txtexg.setBackground(getBackground().white);
            txtobs.setBackground(getBackground().white);
            txtequipamento.setBackground(getBackground().white);
            txtempeq.setBackground(getBackground().white);
            txtdeveq.setBackground(getBackground().white);
            txtdevolucao.setBackground(getBackground().white);
            buttonGroup1.clearSelection();   
            }
    }//GEN-LAST:event_btnsalvaedActionPerformed
    
    private void txtdeveqFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtdeveqFocusLost
// TODO add your handling code here:
    }//GEN-LAST:event_txtdeveqFocusLost
    
    private void txtdeveqFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtdeveqFocusGained
// TODO add your handling code here:
    }//GEN-LAST:event_txtdeveqFocusGained
    
    private void txtempeqFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtempeqFocusLost
// TODO add your handling code here:
    }//GEN-LAST:event_txtempeqFocusLost
    
    private void txtempeqFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtempeqFocusGained
// TODO add your handling code here:
    }//GEN-LAST:event_txtempeqFocusGained
    
    private void txtdevolucaoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtdevolucaoFocusLost
// TODO add your handling code here:
    }//GEN-LAST:event_txtdevolucaoFocusLost
    
    private void txtdevolucaoFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtdevolucaoFocusGained
// TODO add your handling code here:
    }//GEN-LAST:event_txtdevolucaoFocusGained
    
    private void txtenvioFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtenvioFocusLost
// TODO add your handling code here:
    }//GEN-LAST:event_txtenvioFocusLost
    
    private void txtenvioFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtenvioFocusGained
// TODO add your handling code here:
    }//GEN-LAST:event_txtenvioFocusGained
    
    private void btnsairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnsairActionPerformed
// TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_btnsairActionPerformed
    
    private void btnlimparActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnlimparActionPerformed
// TODO add your handling code here:
        txtempeq.setEditable(false);
        txtdeveq.setEditable(false);
        
        cmblote.setSelectedIndex(0);
        
        
        txtobs.setText("");
        txtequipamento.setText("");
        txtp.setText("0");
        txtp.setEnabled(false);
        txtm.setText("0");
        txtm.setEnabled(false);
        txtg.setText("0");
        txtg.setEnabled(false);
        txtgg.setText("0");
        txtgg.setEnabled(false);
        txteg.setText("0");
        txteg.setEnabled(false);
        txtexg.setText("0");
        txtexg.setEnabled(false);
        chbp.setSelected(false);
        chbm.setSelected(false);
        chbg.setSelected(false);
        chbgg.setSelected(false);
        chbeg.setSelected(false);
        chbexg.setSelected(false);
        txtnome.setVisible(true);
        txtnome.setText("");
        txtproduto.setText("");
        txtcodigo.setText("");
        txtcor.setText("");
        txtproduto.setVisible(true);
        txtequipamento.setEnabled(true);
        txtcor.setVisible(true);
        btneditar.setEnabled(false);
        txtp.setBackground(getBackground().white);
        txtm.setBackground(getBackground().white);
        txtg.setBackground(getBackground().white);
        txtgg.setBackground(getBackground().white);
        txteg.setBackground(getBackground().white);
        txtexg.setBackground(getBackground().white);
        txtobs.setBackground(getBackground().white);
        txtequipamento.setBackground(getBackground().white);
        txtempeq.setBackground(getBackground().white);
        txtdeveq.setBackground(getBackground().white);
        txtdevolucao.setBackground(getBackground().white);
        buttonGroup1.clearSelection();
    }//GEN-LAST:event_btnlimparActionPerformed
    
    private void btneditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btneditarActionPerformed
// TODO add your handling code here:
        try {
            
            con_cliente= new conexao();
            con_cliente.conecta();
            con_cliente.executeSQL("Select * FROM fechprod where cd_numlote='"+ cmblote.getSelectedItem() + "'");
            
            while(con_cliente.resultset.next())
                
                txtequipamento.setText(con_cliente.resultset.getString("nm_eqpto"));
            
            
        } catch(SQLException erro) {
            JOptionPane.showMessageDialog(null,"Não localizou dados "+erro);
        }
        try {
            
            con_cliente= new conexao();
            con_cliente.conecta();
            con_cliente.executeSQL("Select * FROM fechprod where cd_numlote='"+ cmblote.getSelectedItem() + "'");
            
            while(con_cliente.resultset.next())
                
                txtp.setText((con_cliente.resultset.getString("qt_p")));
            
            
        } catch(SQLException erro) {
            JOptionPane.showMessageDialog(null,"Não localizou dados "+erro);
        }
        try {
            
            con_cliente= new conexao();
            con_cliente.conecta();
            con_cliente.executeSQL("Select * FROM fechprod where cd_numlote='"+ cmblote.getSelectedItem() + "'");
            
            while(con_cliente.resultset.next())
                
                txtm.setText((con_cliente.resultset.getString("qt_m")));
            
            
        } catch(SQLException erro) {
            JOptionPane.showMessageDialog(null,"Não localizou dados "+erro);
        }
        try {
            
            con_cliente= new conexao();
            con_cliente.conecta();
            con_cliente.executeSQL("Select * FROM fechprod where cd_numlote='"+ cmblote.getSelectedItem() + "'");
            
            while(con_cliente.resultset.next())
                
                txtg.setText((con_cliente.resultset.getString("qt_g")));
            
            
        } catch(SQLException erro) {
            JOptionPane.showMessageDialog(null,"Não localizou dados "+erro);
        }
        try {
            
            con_cliente= new conexao();
            con_cliente.conecta();
            con_cliente.executeSQL("Select * FROM fechprod where cd_numlote='"+ cmblote.getSelectedItem() + "'");
            
            while(con_cliente.resultset.next())
                txtgg.setText((con_cliente.resultset.getString("qt_gg")));
            
            
        } catch(SQLException erro) {
            JOptionPane.showMessageDialog(null,"Não localizou dados "+erro);
        }
        try {
            
            con_cliente= new conexao();
            con_cliente.conecta();
            con_cliente.executeSQL("Select * FROM fechprod where cd_numlote='"+ cmblote.getSelectedItem() + "'");
            
            while(con_cliente.resultset.next())
                
                txteg.setText((con_cliente.resultset.getString("qt_eg")));
            
            
        } catch(SQLException erro) {
            JOptionPane.showMessageDialog(null,"Não localizou dados "+erro);
        }
        try {
            
            con_cliente= new conexao();
            con_cliente.conecta();
            con_cliente.executeSQL("Select * FROM fechprod where cd_numlote='"+ cmblote.getSelectedItem() + "'");
            
            while(con_cliente.resultset.next())
                
                
                txtexg.setText((con_cliente.resultset.getString("qt_exg")));
            
            
        } catch(SQLException erro) {
            JOptionPane.showMessageDialog(null,"Não localizou dados "+erro);
        }
        try {
            
            con_cliente= new conexao();
            con_cliente.conecta();
            con_cliente.executeSQL("Select * FROM fechprod where cd_numlote='"+ cmblote.getSelectedItem() + "'");
            
            while(con_cliente.resultset.next())
                
                txtobs.setText(con_cliente.resultset.getString("nm_observacao"));
            
            
        } catch(SQLException erro) {
            JOptionPane.showMessageDialog(null,"Não localizou dados "+erro);
        }
        try {
            
            con_cliente= new conexao();
            con_cliente.conecta();
            con_cliente.executeSQL("Select  f.*, t.nm_contato, c.nm_cor,p.nm_produto FROM fechprod as f natural join Terceirizada as t natural join Cor  as c natural join Produto as p where cd_numlote='"
                    + cmblote.getSelectedItem() +  "'");
            
            while(con_cliente.resultset.next())
                
                txtnome.setText(con_cliente.resultset.getString("nm_contato"));
            
            
        } catch(SQLException erro) {
            JOptionPane.showMessageDialog(null,"Não localizou dados "+erro);
        }
        try {
            
            con_cliente= new conexao();
            con_cliente.conecta();
            con_cliente.executeSQL("Select  f.*, t.nm_contato, c.nm_cor,p.nm_produto FROM fechprod as f natural join Terceirizada as t natural join Cor  as c natural join Produto as p where cd_numlote='"
                    + cmblote.getSelectedItem() +  "'");
            
            while(con_cliente.resultset.next())
                
                txtcodigo.setText(String.valueOf(con_cliente.resultset.getString("cd_terceirizada")));
            
            
        } catch(SQLException erro) {
            JOptionPane.showMessageDialog(null,"Não localizou dados "+erro);
        }
        try {
            
            con_cliente= new conexao();
            con_cliente.conecta();
            con_cliente.executeSQL("Select  f.*, t.nm_contato, c.nm_cor,p.nm_produto FROM fechprod as f natural join Terceirizada as t natural join Cor  as c natural join Produto as p where cd_numlote='"
                    + cmblote.getSelectedItem() +  "'");
            
            while(con_cliente.resultset.next())
                
                txtenvio.setText(new SimpleDateFormat("dd/MM/yyyy").format(con_cliente.resultset.getDate("dt_envlote")));
            
            
        } catch(SQLException erro) {
            JOptionPane.showMessageDialog(null,"Não localizou dados "+erro);
        }
        try {
            
            con_cliente= new conexao();
            con_cliente.conecta();
            con_cliente.executeSQL("Select  f.*, t.nm_contato, c.nm_cor,p.nm_produto FROM fechprod as f natural join Terceirizada as t natural join Cor  as c natural join Produto as p where cd_numlote='"
                    + cmblote.getSelectedItem() +  "'");
            
            while(con_cliente.resultset.next())
                
                txtdevolucao.setText(new SimpleDateFormat("dd/MM/yyyy").format(con_cliente.resultset.getDate("dt_vevollote")));
            
        } catch(SQLException erro) {
            JOptionPane.showMessageDialog(null,"Não localizou dados "+erro);
        }
        try {
            
            con_cliente= new conexao();
            con_cliente.conecta();
            con_cliente.executeSQL("Select  f.*, t.nm_contato, c.nm_cor,p.nm_produto FROM fechprod as f natural join Terceirizada as t natural join Cor  as c natural join Produto as p where cd_numlote='"
                    + cmblote.getSelectedItem() +  "'");
            
            while(con_cliente.resultset.next())
                
                lblcodproduto.setText(String.valueOf(con_cliente.resultset.getString("cd_produto")));
            
        } catch(SQLException erro) {
            JOptionPane.showMessageDialog(null,"Não localizou dados "+erro);
        }
        try {
            
            con_cliente= new conexao();
            con_cliente.conecta();
            con_cliente.executeSQL("Select  f.*, t.nm_contato, c.nm_cor,p.nm_produto FROM fechprod as f natural join Terceirizada as t natural join Cor  as c natural join Produto as p where cd_numlote='"
                    + cmblote.getSelectedItem() +  "'");
            
            while(con_cliente.resultset.next())
                
                txtproduto.setText(con_cliente.resultset.getString("nm_produto"));
            
        } catch(SQLException erro) {
            JOptionPane.showMessageDialog(null,"Não localizou dados "+erro);
        }
        try {
            
            con_cliente= new conexao();
            con_cliente.conecta();
            con_cliente.executeSQL("Select  f.*, t.nm_contato, c.nm_cor,p.nm_produto FROM fechprod as f natural join Terceirizada as t natural join Cor  as c natural join Produto as p where cd_numlote='"
                    + cmblote.getSelectedItem() +  "'");
            
            while(con_cliente.resultset.next())
                
                lblcodcor.setText(String.valueOf(con_cliente.resultset.getString("cd_cor")));
            //txtcor.setText(String.valueOf(con_cliente.resultset.getString("nm_cor")));
        } catch(SQLException erro) {
            JOptionPane.showMessageDialog(null,"Não localizou dados "+erro);
        }
        try {
            
            con_cliente= new conexao();
            con_cliente.conecta();
            con_cliente.executeSQL("Select  f.*, t.nm_contato, c.nm_cor,p.nm_produto FROM fechprod as f natural join Terceirizada as t natural join Cor  as c natural join Produto as p where cd_numlote='"
                    + cmblote.getSelectedItem() +  "'");
            
            while(con_cliente.resultset.next())
                
                // lblcodcor.setText(String.valueOf(con_cliente.resultset.getString("cd_cor")));
                txtcor.setText(String.valueOf(con_cliente.resultset.getString("nm_cor")));
        } catch(SQLException erro) {
            JOptionPane.showMessageDialog(null,"Não localizou dados "+erro);
        }
        try {
            
            con_cliente= new conexao();
            con_cliente.conecta();
            con_cliente.executeSQL("Select  f.*, t.nm_contato, c.nm_cor,p.nm_produto FROM fechprod as f natural join Terceirizada as t natural join Cor  as c natural join Produto as p where cd_numlote='"
                    + cmblote.getSelectedItem() +  "'");
            
            while(con_cliente.resultset.next())
                
                txtempeq.setText(new SimpleDateFormat("dd/MM/yyyy").format(con_cliente.resultset.getDate("dt_envequpto")));
            
        } catch(SQLException erro) {
            JOptionPane.showMessageDialog(null,"Não localizou dados "+erro);
        }
        try {
            
            con_cliente= new conexao();
            con_cliente.conecta();
            con_cliente.executeSQL("Select  f.*, t.nm_contato, c.nm_cor,p.nm_produto FROM fechprod as f natural join Terceirizada as t natural join Cor  as c natural join Produto as p where cd_numlote='"
                    + cmblote.getSelectedItem() +  "'");
            
            while(con_cliente.resultset.next())
                
                txtdeveq.setText(new SimpleDateFormat("dd/MM/yyyy").format(con_cliente.resultset.getDate("dt_devequpto")));
            
            
        } catch(SQLException erro) {
            JOptionPane.showMessageDialog(null,"Não localizou dados "+erro);
        }
       btnsalvaed.setEnabled(true); 
        txtnome.setVisible(true);
        txtproduto.setVisible(true);
        txtcor.setVisible(true);
        txtp.setEnabled(true);
        txtm.setEnabled(true);
        txtg.setEnabled(true);
        txtgg.setEnabled(true);
        txteg.setEnabled(true);
        txtexg.setEnabled(true);
        txtp.setBackground(getBackground().yellow);
        txtm.setBackground(getBackground().yellow);
        txtg.setBackground(getBackground().yellow);
        txtgg.setBackground(getBackground().yellow);
        txteg.setBackground(getBackground().yellow);
        txtexg.setBackground(getBackground().yellow);
        txtobs.setBackground(getBackground().yellow);
        txtequipamento.setBackground(getBackground().yellow);
        txtempeq.setBackground(getBackground().yellow);
        txtdeveq.setBackground(getBackground().yellow);
        
        txtdevolucao.setBackground(getBackground().yellow);
        
////
//
        
    }//GEN-LAST:event_btneditarActionPerformed
    
    private void cmbloteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbloteActionPerformed
// TODO add your handling code here:
        
    }//GEN-LAST:event_cmbloteActionPerformed
    
    private void cmbloteItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbloteItemStateChanged
        
    }//GEN-LAST:event_cmbloteItemStateChanged
    
    private void chbexgItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_chbexgItemStateChanged
// TODO add your handling code here:
        if (chbexg.isSelected()){
            
            txtexg.setEnabled(true);
            txtexg.requestFocus();
        }
        if (!chbexg.isSelected()){
            txtexg.setEnabled(false);
            txtexg.setText("0");
            
        }
    }//GEN-LAST:event_chbexgItemStateChanged
    
    private void txtexgKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtexgKeyTyped
// TODO add your handling code here:
        if (!Character.isDigit(evt.getKeyChar())) {
            evt.consume();
            
        }
    }//GEN-LAST:event_txtexgKeyTyped
    
    private void txtexgFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtexgFocusGained
// TODO add your handling code here:
        txtexg.selectAll();
    }//GEN-LAST:event_txtexgFocusGained
    
    private void chbegItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_chbegItemStateChanged
// TODO add your handling code here:
        if (chbeg.isSelected()){
            
            txteg.setEnabled(true);
            txteg.requestFocus();
        }
        if (!chbeg.isSelected()){
            txteg.setEnabled(false);
            txteg.setText("0");
            
        }
    }//GEN-LAST:event_chbegItemStateChanged
    
    private void txtegKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtegKeyTyped
// TODO add your handling code here:
        if (!Character.isDigit(evt.getKeyChar())) {
            evt.consume();
            
        }
    }//GEN-LAST:event_txtegKeyTyped
    
    private void txtegFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtegFocusGained
// TODO add your handling code here:
        txteg.selectAll();
    }//GEN-LAST:event_txtegFocusGained
    
    private void chbggItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_chbggItemStateChanged
// TODO add your handling code here:
        if (chbgg.isSelected()){
            
            txtgg.setEnabled(true);
            txtgg.requestFocus();
        }
        if (!chbgg.isSelected()){
            txtgg.setEnabled(false);
            txtgg.setText("0");
            
        }
    }//GEN-LAST:event_chbggItemStateChanged
    
    private void txtggKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtggKeyTyped
// TODO add your handling code here:
        if (!Character.isDigit(evt.getKeyChar())) {
            evt.consume();
            
        }
    }//GEN-LAST:event_txtggKeyTyped
    
    private void txtggFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtggFocusGained
// TODO add your handling code here:
        txtgg.selectAll();
    }//GEN-LAST:event_txtggFocusGained
    
    private void chbgItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_chbgItemStateChanged
// TODO add your handling code here:
        if (chbg.isSelected()){
            
            txtg.setEnabled(true);
            txtg.requestFocus();
        }
        if (!chbg.isSelected()){
            txtg.setEnabled(false);
            txtg.setText("0");
            
        }
    }//GEN-LAST:event_chbgItemStateChanged
    
    private void txtgKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtgKeyTyped
// TODO add your handling code here:
        if (!Character.isDigit(evt.getKeyChar())) {
            evt.consume();
            
        }
    }//GEN-LAST:event_txtgKeyTyped
    
    private void txtgFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtgFocusGained
// TODO add your handling code here:
        txtg.selectAll();
    }//GEN-LAST:event_txtgFocusGained
    
    private void chbmItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_chbmItemStateChanged
// TODO add your handling code here:
        if (chbm.isSelected()){
            
            txtm.setEnabled(true);
            txtm.requestFocus();
            
        }
        if (!chbm.isSelected()){
            txtm.setEnabled(false);
            txtm.setText("0");
            
        }
    }//GEN-LAST:event_chbmItemStateChanged
    
    private void txtmKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtmKeyTyped
// TODO add your handling code here:
        if (!Character.isDigit(evt.getKeyChar())) {
            evt.consume();
            
        }
    }//GEN-LAST:event_txtmKeyTyped
    
    private void txtmFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtmFocusGained
// TODO add your handling code here:
        txtm.selectAll();
    }//GEN-LAST:event_txtmFocusGained
    
    private void chbpItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_chbpItemStateChanged
// TODO add your handling code here:
        if (chbp.isSelected()){
            txtp.setEnabled(true);
            txtp.requestFocus();
            
            
        }
        if (!chbp.isSelected()){
            txtp.setEnabled(false);
            txtp.setText("0");
            
        }
    }//GEN-LAST:event_chbpItemStateChanged
    
    private void txtpKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtpKeyTyped
// TODO add your handling code here:
        // Só aceita numero
        if (!Character.isDigit(evt.getKeyChar())) {
            evt.consume();
            
        }
    }//GEN-LAST:event_txtpKeyTyped
    
    private void txtpFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtpFocusGained
// TODO add your handling code here:
        txtp.selectAll();
    }//GEN-LAST:event_txtpFocusGained
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CadastroFechamentoProduto().setVisible(true);
            }
        });
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btneditar;
    private javax.swing.JButton btnlimpar;
    private javax.swing.JButton btnsair;
    private javax.swing.JButton btnsalvaed;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JCheckBox chbeg;
    private javax.swing.JCheckBox chbexg;
    private javax.swing.JCheckBox chbg;
    private javax.swing.JCheckBox chbgg;
    private javax.swing.JCheckBox chbm;
    private javax.swing.JCheckBox chbp;
    public static javax.swing.JComboBox cmblote;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JLabel lblcodcor;
    private javax.swing.JLabel lblcodproduto;
    private javax.swing.JLabel lblcodproduto1;
    private javax.swing.JLabel lblcodproduto2;
    private javax.swing.JLabel lblcodproduto3;
    private javax.swing.JLabel lblcodproduto4;
    private javax.swing.JLabel lblcodproduto5;
    private javax.swing.JLabel lblcodproduto6;
    private javax.swing.JLabel lblcodproduto7;
    private javax.swing.JLabel lblcodproduto8;
    private javax.swing.JLabel lblcodproduto9;
    private javax.swing.JTextField txtcodigo;
    private javax.swing.JTextField txtcor;
    private javax.swing.JFormattedTextField txtdeveq;
    private javax.swing.JFormattedTextField txtdevolucao;
    private javax.swing.JTextField txteg;
    private javax.swing.JFormattedTextField txtempeq;
    private javax.swing.JFormattedTextField txtenvio;
    private javax.swing.JTextField txtequipamento;
    private javax.swing.JTextField txtexg;
    private javax.swing.JTextField txtg;
    private javax.swing.JTextField txtgg;
    private javax.swing.JTextField txtm;
    private javax.swing.JTextField txtnome;
    private javax.swing.JTextArea txtobs;
    private javax.swing.JTextField txtp;
    private javax.swing.JTextField txtproduto;
    // End of variables declaration//GEN-END:variables
    
}
