/*
 * ConsultaPedido.java
 *
 * Created on 12 de Setembro de 2011, 09:06
 */

package View;
import Relatorio.*;
import java.awt.AWTKeyStroke;
import java.awt.KeyboardFocusManager;
import java.awt.event.KeyEvent;
import java.sql.SQLException;
import java.text.DecimalFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashSet;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.ButtonGroup;
import javax.swing.JFormattedTextField;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;
import javax.swing.table.DefaultTableModel;
import javax.swing.text.MaskFormatter;
import Controle.*;
import Modelo.*;
import Utilitarios.*;
import org.lavieri.modelutil.cep.WebServiceCep;
import java.sql.SQLException;
import javax.swing.JFormattedTextField;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;
import javax.swing.text.MaskFormatter;
import Controle.*;
import Modelo.*;
/**
 *
 * @author  Familia-Silva
 */
public class ConsultaPedido extends javax.swing.JFrame {
    private MaskFormatter FormatoData, FormatoCpf, FormatoCnpj, FormatoCep, FormatoTel1, FormatoTel2, FormatoTel3, FormatoTel4;
    private conexao con_cliente, con_produto, con_cor, con_email,con_vendedor, con_data, con_orcamento;
    final DefaultTableModel model = new DefaultTableModel();
    private int iniciacombo=0;
    private int numeroRegistros=1;
    data mostra_data;
    /** Creates new form ConsultaPedido */
    public ConsultaPedido() {
        initComponents();
        
        Date data = new Date();
        timer1.start();
        mostra_data = new data();
        mostra_data.le_data();
        mostra_data.le_hora();
        // this.setTitle("Consulta Pedido                                                              "+ mostra_data.dia_semana+ ", "+mostra_data.dia + " de " + mostra_data.mes + " de "+ mostra_data.ano +"                                                     "+ mostra_data.hora );
        preenchejTabla1();
        enter();
         setResizable(false);
         Runtime rt = Runtime.getRuntime();
		int MB = 1048576; // total de bytes em 1MB

		double total = rt.maxMemory() / MB;
		double inicio = total - (carregarMemoria()/MB);
		
		//System.out.println(total);
		//System.out.println(inicio);
		
		// Metodo de limpaza
		rt.runFinalization();
		rt.gc();
		
		double fim = total - rt.freeMemory()/ MB;
		System.out.println("Início = " +inicio + "Fim = " + fim);
    }
    public void enter(){
// Enter simula tecla Tab
        HashSet conj = new HashSet(getFocusTraversalKeys(KeyboardFocusManager.FORWARD_TRAVERSAL_KEYS));
        conj.add(AWTKeyStroke.getAWTKeyStroke(KeyEvent.VK_ENTER, 0));
        setFocusTraversalKeys(KeyboardFocusManager.FORWARD_TRAVERSAL_KEYS, conj);
    }
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        timer1 = new org.netbeans.examples.lib.timerbean.Timer();
        buttonGroup1 = new javax.swing.ButtonGroup();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        btnconsulta = new java.awt.Button();
        btnlimpar = new java.awt.Button();
        btnsair = new java.awt.Button();
        jPanel1 = new javax.swing.JPanel();
        rdbnome = new javax.swing.JRadioButton();
        rdbpedido = new javax.swing.JRadioButton();
        txtnome = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        txtpedido = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        btnimprimir = new java.awt.Button();

        timer1.addTimerListener(new org.netbeans.examples.lib.timerbean.TimerListener() {
            public void onTime(java.awt.event.ActionEvent evt) {
                timer1OnTime(evt);
            }
        });

        getContentPane().setLayout(null);

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Consulta Pedido");
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Item", "Cliente", "Produto", "Cor", "Tam.", "Qtd.", "N. Ped.", "V. Unit.", "V. Total", "V. Pedido", "Venda", "Entrega"
            }
        ));
        jTable1.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        jTable1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTable1FocusGained(evt);
            }
        });

        jScrollPane1.setViewportView(jTable1);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(10, 90, 960, 270);

        btnconsulta.setFont(new java.awt.Font("Dialog", 1, 12));
        btnconsulta.setLabel("Consulta");
        btnconsulta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnconsultaActionPerformed(evt);
            }
        });

        getContentPane().add(btnconsulta);
        btnconsulta.setBounds(10, 370, 80, 30);

        btnlimpar.setFont(new java.awt.Font("Dialog", 1, 12));
        btnlimpar.setLabel("Limpar");
        btnlimpar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnlimparActionPerformed(evt);
            }
        });

        getContentPane().add(btnlimpar);
        btnlimpar.setBounds(110, 370, 80, 30);

        btnsair.setActionCommand("Sair");
        btnsair.setFont(new java.awt.Font("Dialog", 1, 12));
        btnsair.setLabel("Sair");
        btnsair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnsairActionPerformed(evt);
            }
        });

        getContentPane().add(btnsair);
        btnsair.setBounds(210, 370, 80, 30);

        jPanel1.setLayout(null);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Tipo de Consulta"));
        buttonGroup1.add(rdbnome);
        rdbnome.setText("Cliente");
        rdbnome.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        rdbnome.setMargin(new java.awt.Insets(0, 0, 0, 0));
        rdbnome.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                rdbnomeItemStateChanged(evt);
            }
        });

        jPanel1.add(rdbnome);
        rdbnome.setBounds(10, 40, 80, 15);

        buttonGroup1.add(rdbpedido);
        rdbpedido.setText("Pedido");
        rdbpedido.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        rdbpedido.setMargin(new java.awt.Insets(0, 0, 0, 0));
        rdbpedido.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                rdbpedidoItemStateChanged(evt);
            }
        });

        jPanel1.add(rdbpedido);
        rdbpedido.setBounds(100, 40, 60, 15);

        getContentPane().add(jPanel1);
        jPanel1.setBounds(10, 10, 170, 70);

        txtnome.setEditable(false);
        getContentPane().add(txtnome);
        txtnome.setBounds(190, 56, 280, 20);

        jLabel1.setText("Nome");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(190, 34, 60, 14);

        txtpedido.setEditable(false);
        txtpedido.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtpedidoKeyTyped(evt);
            }
        });

        getContentPane().add(txtpedido);
        txtpedido.setBounds(480, 56, 60, 20);

        jLabel2.setText("Pedido");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(480, 34, 60, 14);

        btnimprimir.setActionCommand("Sair");
        btnimprimir.setFont(new java.awt.Font("Dialog", 1, 12));
        btnimprimir.setLabel("Imprimir");
        btnimprimir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnimprimirActionPerformed(evt);
            }
        });

        getContentPane().add(btnimprimir);
        btnimprimir.setBounds(310, 370, 80, 30);

        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        setBounds((screenSize.width-986)/2, (screenSize.height-450)/2, 986, 450);
    }// </editor-fold>//GEN-END:initComponents
    
    private void btnimprimirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnimprimirActionPerformed
// TODO add your handling code here:
        if(rdbnome.isSelected() && (!txtnome.getText().equals(""))){
            new Rel_Pedido_1();
        }
        if(rdbpedido.isSelected()&& (!txtpedido.getText().equals(""))){
            new Rel_Pedido();
        }
        
    }//GEN-LAST:event_btnimprimirActionPerformed
  public static long carregarMemoria(){
		
		ArrayList<Integer> list = new ArrayList<Integer>();
		for(int i = 0; i<1000000; i++){
		list.add(i);	
		}
		return Runtime.getRuntime().freeMemory();
	}      
    private void txtpedidoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtpedidoKeyTyped
// TODO add your handling code here
        // Só aceita numero
        if (!Character.isDigit(evt.getKeyChar())) {
            evt.consume();
        }
    }//GEN-LAST:event_txtpedidoKeyTyped
    
    private void rdbpedidoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_rdbpedidoItemStateChanged
// TODO add your handling code here:
        if (rdbpedido.isSelected())	;
        txtpedido.setEditable(true);
        txtnome.setEditable(false);
        txtnome.setText("");
        txtpedido.requestFocus();
    }//GEN-LAST:event_rdbpedidoItemStateChanged
    
    private void rdbnomeItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_rdbnomeItemStateChanged
// TODO add your handling code here:
        if (rdbnome.isSelected())					;
        txtpedido.setEditable(false);
        txtnome.setEditable(true);
        txtnome.requestFocus();
        txtpedido.setText("");
    }//GEN-LAST:event_rdbnomeItemStateChanged
    
    private void btnsairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnsairActionPerformed
// TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_btnsairActionPerformed
    
    private void btnlimparActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnlimparActionPerformed
// TODO add your handling code here:
        buttonGroup1.clearSelection();
        ((DefaultTableModel) jTable1.getModel()).setNumRows(0);
        jTable1.updateUI();
        numeroRegistros = 1;
        txtpedido.setEditable(false);
        txtpedido.setText("");
        txtnome.setEditable(false);
        txtnome.setText("");
        btnimprimir.setEnabled(false);
    }//GEN-LAST:event_btnlimparActionPerformed
     public static String converterDoubleString(double precoDouble) {  
   /*Transformando um double em 2 casas decimais*/  
   DecimalFormat fmt = new DecimalFormat("0.00");    //limita o número de casas decimais     
   String string = fmt.format(precoDouble);  
   String[] part = string.split("[,]");  
   String preco = part[0]+"."+part[1];  
   return preco;  
}  
    public void preenchejTablaPedido(){
        final DefaultTableModel modelo = (DefaultTableModel)jTable1.getModel();
        jTable1.getColumnModel().getColumn(0).setPreferredWidth(39);
        jTable1.getColumnModel().getColumn(1).setPreferredWidth(210);
        jTable1.getColumnModel().getColumn(2).setPreferredWidth(200);
        jTable1.getColumnModel().getColumn(3).setPreferredWidth(250);
        jTable1.getColumnModel().getColumn(4).setPreferredWidth(40);
        jTable1.getColumnModel().getColumn(5).setPreferredWidth(40);
        jTable1.getColumnModel().getColumn(6).setPreferredWidth(45);
        jTable1.getColumnModel().getColumn(7).setPreferredWidth(60);
        jTable1.getColumnModel().getColumn(8).setPreferredWidth(60);
        jTable1.getColumnModel().getColumn(9).setPreferredWidth(65);
        jTable1.getColumnModel().getColumn(10).setPreferredWidth(75);
        jTable1.getColumnModel().getColumn(11).setPreferredWidth(75);
        
        try {
            con_cliente= new conexao();
            con_cliente.conecta();
            con_cliente.executeSQL("Select  cl.nm_cliente, p.nm_produto, co.nm_cor, c.cd_pedido1,c.nm_tamanho, c.qt_quantidade,c.vl_unitario,c.vl_total,c.vl_ttgeral,c.dt_pedido,c.dt_entrega  FROM Pedido as c natural join produto  as p natural join cliente as cl natural join cor  as co where cd_pedido1='"
                    + txtpedido.getText()+ "'");
            
            while(con_cliente.resultset.next())
                
                modelo.addRow(new Object []{numeroRegistros++,con_cliente.resultset.getString("nm_cliente"), con_cliente.resultset.getString("nm_produto"),con_cliente.resultset.getString("nm_cor"),con_cliente.resultset.getString("nm_tamanho"),con_cliente.resultset.getString("qt_quantidade"),"",converterDoubleString(con_cliente.resultset.getDouble("vl_unitario")),
                converterDoubleString(con_cliente.resultset.getDouble("vl_total")), converterDoubleString(con_cliente.resultset.getDouble("vl_ttgeral")),new SimpleDateFormat("dd/MM/yyyy").format(con_cliente.resultset.getDate("dt_pedido")),new SimpleDateFormat("dd/MM/yyyy").format(con_cliente.resultset.getDate("dt_entrega"))});
            
        } catch(SQLException erro) {
            JOptionPane.showMessageDialog(null,"Não localizou dados "+erro);
        }
        
    }
    public void preenchejTablaNome(){
        final DefaultTableModel modelo = (DefaultTableModel)jTable1.getModel();
        jTable1.getColumnModel().getColumn(0).setPreferredWidth(39);
        jTable1.getColumnModel().getColumn(1).setPreferredWidth(210);
        jTable1.getColumnModel().getColumn(2).setPreferredWidth(200);
        jTable1.getColumnModel().getColumn(3).setPreferredWidth(250);
        jTable1.getColumnModel().getColumn(4).setPreferredWidth(40);
        jTable1.getColumnModel().getColumn(5).setPreferredWidth(40);
        jTable1.getColumnModel().getColumn(6).setPreferredWidth(45);
        jTable1.getColumnModel().getColumn(7).setPreferredWidth(60);
        jTable1.getColumnModel().getColumn(8).setPreferredWidth(60);
        jTable1.getColumnModel().getColumn(9).setPreferredWidth(65);
        jTable1.getColumnModel().getColumn(10).setPreferredWidth(75);
        jTable1.getColumnModel().getColumn(11).setPreferredWidth(75);
        
        try {
            con_cliente= new conexao();
            con_cliente.conecta();
            con_cliente.executeSQL("Select  cl.nm_cliente, p.nm_produto, co.nm_cor, c.nm_tamanho, c.cd_pedido1, c.qt_quantidade,c.vl_unitario,c.vl_total,c.vl_ttgeral,c.dt_pedido,c.dt_entrega  FROM Pedido as c natural join produto  as p natural join cliente as cl natural join cor  as co where nm_cliente LIKE  '"
                    + txtnome.getText().toUpperCase() + "%' order by cd_pedido1");
            
            while(con_cliente.resultset.next())
                
                modelo.addRow(new Object []{numeroRegistros++,con_cliente.resultset.getString("nm_cliente"), con_cliente.resultset.getString("nm_produto"),con_cliente.resultset.getString("nm_cor"),con_cliente.resultset.getString("nm_tamanho"),con_cliente.resultset.getString("qt_quantidade"),con_cliente.resultset.getString("cd_pedido1"),converterDoubleString(con_cliente.resultset.getDouble("vl_unitario")),
                converterDoubleString(con_cliente.resultset.getDouble("vl_total")), converterDoubleString(con_cliente.resultset.getDouble("vl_ttgeral")),new SimpleDateFormat("dd/MM/yyyy").format(con_cliente.resultset.getDate("dt_pedido")),new SimpleDateFormat("dd/MM/yyyy").format(con_cliente.resultset.getDate("dt_entrega"))});
            
        } catch(SQLException erro) {
            JOptionPane.showMessageDialog(null,"Não localizou dados "+erro);
        }
        
    }
    private void btnconsultaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnconsultaActionPerformed
        if(rdbpedido.isSelected()){
            preenchejTablaPedido();
            btnimprimir.setEnabled(true);
        }
        if(rdbnome.isSelected()){
            preenchejTablaNome();
            btnimprimir.setEnabled(true);
        }
    }//GEN-LAST:event_btnconsultaActionPerformed
    
    private void jTable1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTable1FocusGained
// TODO add your handling code here:
    }//GEN-LAST:event_jTable1FocusGained
    public void preenchejTabla1(){
        
        
        final DefaultTableModel modelo = (DefaultTableModel)jTable1.getModel();
        jTable1.getColumnModel().getColumn(0).setPreferredWidth(39);
        jTable1.getColumnModel().getColumn(1).setPreferredWidth(210);
        jTable1.getColumnModel().getColumn(2).setPreferredWidth(200);
        jTable1.getColumnModel().getColumn(3).setPreferredWidth(250);
        jTable1.getColumnModel().getColumn(4).setPreferredWidth(40);
        jTable1.getColumnModel().getColumn(5).setPreferredWidth(40);
        jTable1.getColumnModel().getColumn(6).setPreferredWidth(45);
        jTable1.getColumnModel().getColumn(7).setPreferredWidth(60);
        jTable1.getColumnModel().getColumn(8).setPreferredWidth(60);
        jTable1.getColumnModel().getColumn(9).setPreferredWidth(65);
        jTable1.getColumnModel().getColumn(10).setPreferredWidth(75);
        jTable1.getColumnModel().getColumn(11).setPreferredWidth(75);
        modelo.setNumRows(0);
        
    }
    private void timer1OnTime(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_timer1OnTime
// TODO add your handling code here:
        mostra_data.le_hora();
        // lblhora.setText(mostra_data.hora);
        //  this.setTitle("Consulta Pedido                                                              "+ mostra_data.dia_semana+ ", "+mostra_data.dia + " de " + mostra_data.mes + " de "+ mostra_data.ano +"                                                     "+ mostra_data.hora );
    }//GEN-LAST:event_timer1OnTime
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ConsultaPedido().setVisible(true);
            }
        });
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private java.awt.Button btnconsulta;
    private java.awt.Button btnimprimir;
    private java.awt.Button btnlimpar;
    private java.awt.Button btnsair;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JRadioButton rdbnome;
    private javax.swing.JRadioButton rdbpedido;
    private org.netbeans.examples.lib.timerbean.Timer timer1;
    public static javax.swing.JTextField txtnome;
    public static javax.swing.JTextField txtpedido;
    // End of variables declaration//GEN-END:variables
    
}
